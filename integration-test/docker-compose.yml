version: '2'
services:
  collectd:
    build:
      context: ..
      dockerfile: integration-test/Dockerfile.collectd
    environment:
      SF_API_TOKEN: testing
      SF_INGEST_HOST: fake_sfx
    depends_on:
      - fake_sfx
      - master
      - worker1
      - worker2
  
  collectdamazon2017:
    build:
      context: ..
      dockerfile: integration-test/Dockerfile.collectd.amazon2017.03
    depends_on:
      - fake_sfx
      - master
      - worker1
      - worker2

  master:
    image: ubuntu
    ports:
      - 2379
    command: >
      --name
      master
      -advertise-client-urls
      http://master:2379
      -listen-client-urls
      http://0.0.0.0:2379
      -initial-advertise-peer-urls
      http://master:2380
      -listen-peer-urls
      http://0.0.0.0:2380
      -initial-cluster
      master=http://master:2380

  worker1:
    image: ubuntu
    ports:
      - 2379
    command: >
      etcd --name
      worker1
      -advertise-client-urls
      http://worker1:2379
      -listen-client-urls
      http://0.0.0.0:2379
      -initial-advertise-peer-urls
      http://worker1:2380
      -listen-peer-urls
      http://0.0.0.0:2380
      -initial-cluster
      worker1=http://worker1:2380

  worker2:
    image: ubuntu
    ports:
      - 2379
    command: >
      etcd --name
      worker2
      -advertise-client-urls
      http://worker2:2379
      -listen-client-urls
      http://0.0.0.0:2379
      -initial-advertise-peer-urls
      http://worker2:2380
      -listen-peer-urls
      http://0.0.0.0:2380
      -initial-cluster
      worker2=http://worker2:2380

  fake_sfx:
    build:
      context: .
      dockerfile: Dockerfile.sink

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - collectd

  test26: # this is to test that python2.6 works (because collectd is linked to 2.6 on amazon)
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - collectdamazon2017